plugins {
    id "com.microsoft.azure.azurefunctions" version "1.12.0"
    id "java"
}

group 'com.mashkario.backuper'
version '0.0.1'

def secretProperties = new Properties()
try {
    secretProperties.load(new FileInputStream(rootProject.file("secret.properties")))
} catch (Exception e) {
    logger.warn("Can't load secret properties:{}", e.message)
}

dependencies {
    annotationProcessor 'com.google.dagger:dagger-compiler:2.49'
    implementation 'com.google.dagger:dagger:2.49'
    implementation 'com.microsoft.azure.functions:azure-functions-java-library:3.1.0'
    implementation 'com.microsoft.azure.functions:azure-functions-java-spi:1.0.0'
    implementation 'com.azure:azure-cosmos:4.52.0'
    implementation 'com.azure:azure-identity:1.11.0'

    testImplementation 'org.mockito:mockito-core:2.23.4'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
}

azurefunctions {
    subscription = secretProperties["azure.subscription"]
    resourceGroup = secretProperties["azure.resourceGroup"]
    appName = secretProperties["azure.appName"] ?: "default"
    pricingTier = 'Consumption'
    region = 'eastus'
    runtime {
        os = 'linux'
    }
    // appSettings {
    //    key = 'value'
    // }
    // localDebug = "transport=dt_socket,server=y,suspend=n,address=5005"
}

sourceSets {
    main {
        java {
            srcDir "${buildDir.absolutePath}/generated/sources/annotationProcessor/java/main"
        }
    }
}
